/******/!function(t){function r(o){if(e[o])return e[o].exports;var a=e[o]={exports:{},id:o,loaded:!1};return t[o].call(a.exports,a,a.exports,r),a.loaded=!0,a.exports}// webpackBootstrap
/******/
var e={};return r.m=t,r.c=e,r.p="",r(0)}([function(t,r,e){var o,a=e(1),n=e(2),i=e(3),l=e(4),s=e(5),u=e(6),c=e(7),p=e(8),d=e(9);!function(t){"use strict";angular.module("healthPlatform",["ngAnimate","ngTouch","ngSanitize","ngMessages","ngAria","ngResource","ui.router","toastr"]).constant("malarkey",malarkey).constant("moment",moment).config(a.config).config(n.routerConfig).run(i.runBlock).service("githubContributor",l.GithubContributor).service("webDevTec",s.WebDevTecService).controller("AuthController",p.AuthController).controller("DashboardController",d.DashboardController).directive("acmeNavbar",u.acmeNavbar).directive("acmeMalarkey",c.acmeMalarkey)}(o||(o={}))},function(t,r){function e(t,r){t.debugEnabled(!0),r.allowHtml=!0,r.timeOut=3e3,r.positionClass="toast-top-right",r.preventDuplicates=!0,r.progressBar=!0}e.$inject=["$logProvider","toastrConfig"],r.config=e},function(t,r){function e(t,r){t.state("auth",{url:"/",templateUrl:"app/auth/auth.html",controller:"AuthController",controllerAs:"auth"}).state("dashboard",{url:"/dashboard",templateUrl:"app/dashboard/dashboard.html",controller:"DashboardController",controllerAs:"dashboard"}),r.otherwise("/")}e.$inject=["$stateProvider","$urlRouterProvider"],r.routerConfig=e},function(t,r){function e(t){t.debug("runBlock end")}e.$inject=["$log"],r.runBlock=e},function(t,r){var e=function(){function t(t,r){this.$log=t,this.$http=r,this.apiHost="https://api.github.com/repos/Swiip/generator-gulp-angular"}return t.$inject=["$log","$http"],t.prototype.getContributors=function(t){var r=this;return void 0===t&&(t=30),this.$http.get(this.apiHost+"/contributors?per_page="+t).then(function(t){return t.data})["catch"](function(t){r.$log.error("XHR Failed for getContributors.\n",t.data)})},t}();r.GithubContributor=e},function(t,r){var e=function(){function t(){var t=[{title:"AngularJS",url:"https://angularjs.org/",description:"HTML enhanced for web apps!",logo:"angular.png"},{title:"BrowserSync",url:"http://browsersync.io/",description:"Time-saving synchronised browser testing.",logo:"browsersync.png"},{title:"GulpJS",url:"http://gulpjs.com/",description:"The streaming build system.",logo:"gulp.png"},{title:"Jasmine",url:"http://jasmine.github.io/",description:"Behavior-Driven JavaScript.",logo:"jasmine.png"},{title:"Karma",url:"http://karma-runner.github.io/",description:"Spectacular Test Runner for JavaScript.",logo:"karma.png"},{title:"Protractor",url:"https://github.com/angular/protractor",description:"End to end test framework for AngularJS applications built on top of WebDriverJS.",logo:"protractor.png"},{title:"TypeScript",url:"http://www.typescriptlang.org/",description:"TypeScript, a typed superset of JavaScript that compiles to plain JavaScript.",logo:"typescript.png"}];this.data=t.map(function(t){return t.rank=Math.random(),t})}return Object.defineProperty(t.prototype,"tec",{get:function(){return this.data},enumerable:!0,configurable:!0}),t}();r.WebDevTecService=e},function(t,r){function e(){return{restrict:"E",scope:{creationDate:"="},templateUrl:"app/components/navbar/navbar.html",controller:o,controllerAs:"vm",bindToController:!0}}r.acmeNavbar=e;var o=function(){function t(t){this.relativeDate=t(this.creationDate).fromNow()}return t.$inject=["moment"],t}();r.NavbarController=o},function(t,r){function e(t){return{restrict:"E",scope:{extraValues:"="},template:"&nbsp;",link:o,controller:a,controllerAs:"vm"}}function o(t,r,e,o){var a,n=o.malarkey(r[0],{typeSpeed:40,deleteSpeed:40,pauseDelay:800,loop:!0,postfix:" "});r.addClass("acme-malarkey"),angular.forEach(t.extraValues,function(t){n.type(t).pause()["delete"]()}),a=t.$watch("vm.contributors",function(t,r){angular.forEach(o.contributors,function(t){n.type(t.login).pause()["delete"]()})}),t.$on("$destroy",function(){a()})}e.$inject=["malarkey"],r.acmeMalarkey=e;var a=function(){function t(t,r,e){this.$log=t,this.githubContributor=r,this.malarkey=e,this.contributors=[],this.activate()}return t.$inject=["$log","githubContributor","malarkey"],t.prototype.activate=function(){var t=this;return this.getContributors().then(function(){t.$log.info("Activated Contributors View")})},t.prototype.getContributors=function(){var t=this;return this.githubContributor.getContributors(10).then(function(r){return t.contributors=r,t.contributors})},t}();r.MalarkeyController=a},function(t,r){var e=function(){function t(t,r){this.sampleUsers=[{email:"foo@bar.com",password:"verysecure"}],this.logger=t,this.stateSrv=r}return t.$inject=["$log","$state"],t.isEmail=function(t){return/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i.test(t)},t.prototype.submit=function(r){if(this.credentials=r,this.sampleUsers.filter(function(t){return t.email===r.email&&t.password===r.password}).length)$.Notify({caption:"Authenticated...",content:"Welcome back "+r.email.slice(0,r.email.indexOf("@")),type:"success"}),this.stateSrv.go("dashboard");else{var e=t.isEmail(r.email)?"Authentication error":"Invalid email";$.Notify({caption:"Error",content:e,type:"alert"})}},t}();r.AuthController=e},function(t,r){var e=function(){function t(t){this.logger=t}return t.$inject=["$log"],t}();r.DashboardController=e}]),angular.module("healthPlatform").run(["$templateCache",function(t){t.put("app/auth/auth.html",'<div class="login-form padding20 block-shadow"><form name="loginForm" ng-submit="auth.submit(credentials)" novalidate="" data-role="validator"><h1 class="text-light">HealthPlatform.io</h1><hr class="thin"><br><div class="input-control text full-size" data-role="input"><label for="email">Email:</label> <input type="text" data-validate-func="email" placeholder="email" name="email" id="email" ng-model="credentials.email" required="" data-validate-hint="Not valid email address" style="padding-right: 5px;"> <button class="button helper-button clear"><span class="mif-cross"></span></button></div><br><br><div class="input-control password full-size" data-role="input"><label for="password">Password:</label> <input type="password" name="password" id="password" ng-model="credentials.password" required=""> <button class="button helper-button reveal"><span class="mif-looks"></span></button></div><br><br><div class="form-actions"><button type="submit" class="button primary" ng-disabled="loginForm.$invalid">Login</button> <button type="button" class="button link">Request access</button></div></form></div>'),t.put("app/dashboard/dashboard.html","Welcome to the dashboard"),t.put("app/components/navbar/navbar.html",'<nav class="navbar"><a href="https://github.com/Swiip/generator-gulp-angular">Gulp Angular</a><ul><li class="active"><a ng-href="#">Home</a></li><li><a ng-href="#">About</a></li><li><a ng-href="#">Contact</a></li></ul><ul class="acme-navbar-text"><li>Application was created {{ vm.relativeDate }}.</li></ul></nav>')}]);
//# sourceMappingURL=../maps/scripts/app-782835a5cb.js.map
